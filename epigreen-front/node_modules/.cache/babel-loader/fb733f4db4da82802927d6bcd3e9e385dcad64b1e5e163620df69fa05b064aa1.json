{"ast":null,"code":"var _jsxFileName = \"/Users/nawel/Documents/GitHub/EpiGreen-Ing2/proto-front/src/components/DemoLivraison.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { getResultFromRoutingApi, getResultFromGeocodingApi } from \"../api/Geoapify\";\nimport { getCustomerById } from \"../components/Customer\";\nimport { getEntrepotById } from \"../components/Entrepot\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DemoLivraison = () => {\n  _s();\n  const [distance, setDistance] = useState(null);\n  const [customerId, setCustomerId] = useState(\"\");\n  const [entrepotId, setEntrepotId] = useState(\"\");\n  const [routeData, setRouteData] = useState(null);\n  const [customer, setCustomer] = useState(null);\n  const [entrepot, setEntrepot] = useState(null);\n  const [customerCoordinates, setCustomerCoordinates] = useState({\n    latitude: null,\n    longitude: null\n  });\n  const [entrepotCoordinates, setEntrepotCoordinates] = useState({\n    latitude: null,\n    longitude: null\n  });\n\n  // Function to fetch customer data\n  const fetchCustomerData = async () => {\n    if (customerId) {\n      const customerData = await getCustomerById(customerId);\n      setCustomer(customerData);\n    }\n  };\n\n  // Function to fetch entrepot data\n  const fetchEntrepotData = async () => {\n    if (entrepotId) {\n      const entrepotData = await getEntrepotById(entrepotId);\n      console.log(\"Données entrepot : \" + entrepotData);\n      setEntrepot(entrepotData);\n    }\n  };\n\n  // Function to call the geocoding API for the customer\n  const fetchCustomerCoordinates = async () => {\n    if (customer !== null && customer !== void 0 && customer.address) {\n      try {\n        var _response$features$, _response$features$2;\n        const response = await getResultFromGeocodingApi(customer.address);\n        const lat = (_response$features$ = response.features[0]) === null || _response$features$ === void 0 ? void 0 : _response$features$.properties.lat;\n        const lon = (_response$features$2 = response.features[0]) === null || _response$features$2 === void 0 ? void 0 : _response$features$2.properties.lon;\n        if (lat !== customerCoordinates.latitude || lon !== customerCoordinates.longitude) {\n          setCustomerCoordinates({\n            latitude: lat,\n            longitude: lon\n          });\n        }\n      } catch (error) {\n        console.error(\"Erreur lors de l'appel à l'API de géocodage pour le client : \", error);\n      }\n    }\n  };\n\n  // Function to call the geocoding API for the entrepot\n  const fetchEntrepotCoordinates = async () => {\n    if (entrepot !== null && entrepot !== void 0 && entrepot.address) {\n      try {\n        var _response$features$3, _response$features$4;\n        const response = await getResultFromGeocodingApi(entrepot.address);\n        const lat = (_response$features$3 = response.features[0]) === null || _response$features$3 === void 0 ? void 0 : _response$features$3.properties.lat;\n        const lon = (_response$features$4 = response.features[0]) === null || _response$features$4 === void 0 ? void 0 : _response$features$4.properties.lon;\n        if (lat !== entrepotCoordinates.latitude || lon !== entrepotCoordinates.longitude) {\n          setEntrepotCoordinates({\n            latitude: lat,\n            longitude: lon\n          });\n        }\n      } catch (error) {\n        console.error(\"Erreur lors de l'appel à l'API de géocodage pour l'entrepot : \", error);\n      }\n    }\n  };\n\n  // Function to call the routage API\n  const callRoutingApi = async () => {\n    try {\n      var _response$features$5;\n      // Convertir les objets en tableaux [latitude, longitude]\n      const fromWaypoint = [customerCoordinates.latitude, customerCoordinates.longitude];\n      const toWaypoint = [entrepotCoordinates.latitude, entrepotCoordinates.longitude];\n      console.log(\"fromWayPoint : \" + fromWaypoint);\n      console.log(\"toWayPoint : \" + toWaypoint);\n\n      // Appeler l'API avec ces tableaux\n      const response = await getResultFromRoutingApi(fromWaypoint, toWaypoint);\n      const distance = ((_response$features$5 = response.features[0]) === null || _response$features$5 === void 0 ? void 0 : _response$features$5.properties.distance) / 1000;\n      setDistance(distance);\n      setRouteData(response);\n    } catch (error) {\n      console.error(\"Erreur lors de l'appel à l'API de routage : \", error);\n    }\n  };\n  const calculQuantiteCo2 = async () => {\n    //TODO : ajouter table livraison pour pouvoir calculer emissions CO2 (calculer distace avec les attributs de la livraison aussi)\n    //const quantiteCO2 = distance * livraison.transport.kgCo2;\n  };\n\n  // Display\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"D\\xE9mo du processus de livraison\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 52\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Cas d'une livraison au domicile du client :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Choix du client :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Client ID : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: customerId,\n        onChange: e => setCustomerId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchCustomerData,\n      children: \"R\\xE9cup\\xE9rer donn\\xE9es du client\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), customer && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Nom : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 28\n          }, this), customer.firstname, \" \", customer.lastname]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Adresse : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 28\n          }, this), customer.address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchCustomerCoordinates,\n        children: \"R\\xE9cup\\xE9rer coordonn\\xE9es client\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }, this), customerCoordinates.latitude && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Latitude : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 32\n          }, this), customerCoordinates.latitude]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Longitude : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 32\n          }, this), customerCoordinates.longitude]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \"Choix de l'entrepot :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Entrepot ID : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: entrepotId,\n        onChange: e => setEntrepotId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchEntrepotData,\n      children: \"R\\xE9cup\\xE9rer donn\\xE9es de l'entrepot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this), entrepot && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Adresse : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 28\n          }, this), entrepot.address]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchEntrepotCoordinates,\n        children: \"R\\xE9cup\\xE9rer coordonn\\xE9es magasin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }, this), entrepotCoordinates.latitude && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Latitude : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 32\n          }, this), entrepotCoordinates.latitude]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Longitude : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 32\n          }, this), entrepotCoordinates.longitude]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true), customerCoordinates && entrepotCoordinates && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: callRoutingApi,\n        children: \"R\\xE9cup\\xE9rer distance client - entrepot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 21\n      }, this), distance && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Distance : \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 36\n            }, this), distance, /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \" km.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 74\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 29\n        }, this)\n      }, void 0, false)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n};\n_s(DemoLivraison, \"7HNUFHd2+hXRSoB6hE3X6mf4dSA=\");\n_c = DemoLivraison;\nexport default DemoLivraison;\nvar _c;\n$RefreshReg$(_c, \"DemoLivraison\");","map":{"version":3,"names":["React","useState","getResultFromRoutingApi","getResultFromGeocodingApi","getCustomerById","getEntrepotById","jsxDEV","_jsxDEV","Fragment","_Fragment","DemoLivraison","_s","distance","setDistance","customerId","setCustomerId","entrepotId","setEntrepotId","routeData","setRouteData","customer","setCustomer","entrepot","setEntrepot","customerCoordinates","setCustomerCoordinates","latitude","longitude","entrepotCoordinates","setEntrepotCoordinates","fetchCustomerData","customerData","fetchEntrepotData","entrepotData","console","log","fetchCustomerCoordinates","address","_response$features$","_response$features$2","response","lat","features","properties","lon","error","fetchEntrepotCoordinates","_response$features$3","_response$features$4","callRoutingApi","_response$features$5","fromWaypoint","toWaypoint","calculQuantiteCo2","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","firstname","lastname","_c","$RefreshReg$"],"sources":["/Users/nawel/Documents/GitHub/EpiGreen-Ing2/proto-front/src/components/DemoLivraison.js"],"sourcesContent":["import React, { useState} from 'react';\r\nimport { getResultFromRoutingApi, getResultFromGeocodingApi } from \"../api/Geoapify\";\r\nimport { getCustomerById } from \"../components/Customer\";\r\nimport { getEntrepotById } from \"../components/Entrepot\";\r\n\r\nconst DemoLivraison = () => {\r\n    const [distance, setDistance] = useState(null);\r\n    const [customerId, setCustomerId] = useState(\"\");\r\n    const [entrepotId, setEntrepotId] = useState(\"\");\r\n    const [routeData, setRouteData] = useState(null);\r\n    const [customer, setCustomer] = useState(null);\r\n    const [entrepot, setEntrepot] = useState(null);\r\n    const [customerCoordinates, setCustomerCoordinates] = useState({\r\n        latitude: null,\r\n        longitude: null\r\n    });\r\n    const [entrepotCoordinates, setEntrepotCoordinates] = useState({\r\n        latitude: null,\r\n        longitude: null\r\n    });\r\n\r\n\r\n    // Function to fetch customer data\r\n    const fetchCustomerData = async () => {\r\n        if (customerId) {\r\n            const customerData = await getCustomerById(customerId);\r\n            setCustomer(customerData);\r\n        }\r\n    };\r\n\r\n\r\n    // Function to fetch entrepot data\r\n    const fetchEntrepotData = async () => {\r\n        if (entrepotId) {\r\n            const entrepotData = await getEntrepotById(entrepotId);\r\n            console.log(\"Données entrepot : \" + entrepotData);\r\n            setEntrepot(entrepotData);\r\n        }\r\n    };\r\n\r\n\r\n    // Function to call the geocoding API for the customer\r\n    const fetchCustomerCoordinates = async () => {\r\n        if (customer?.address) {\r\n            try {\r\n                const response = await getResultFromGeocodingApi(customer.address);\r\n                const lat = response.features[0]?.properties.lat;\r\n                const lon = response.features[0]?.properties.lon;\r\n                if (\r\n                    lat !== customerCoordinates.latitude ||\r\n                    lon !== customerCoordinates.longitude\r\n                ) {\r\n                    setCustomerCoordinates({ latitude: lat, longitude: lon });\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Erreur lors de l'appel à l'API de géocodage pour le client : \", error);\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    // Function to call the geocoding API for the entrepot\r\n    const fetchEntrepotCoordinates = async () => {\r\n        if (entrepot?.address) {\r\n            try {\r\n                const response = await getResultFromGeocodingApi(entrepot.address);\r\n                const lat = response.features[0]?.properties.lat;\r\n                const lon = response.features[0]?.properties.lon;\r\n                if (\r\n                    lat !== entrepotCoordinates.latitude ||\r\n                    lon !== entrepotCoordinates.longitude\r\n                ) {\r\n                    setEntrepotCoordinates({ latitude: lat, longitude: lon });\r\n                }\r\n            } catch (error) {\r\n                console.error(\"Erreur lors de l'appel à l'API de géocodage pour l'entrepot : \", error);\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    // Function to call the routage API\r\n    const callRoutingApi = async () => {\r\n        try {\r\n            // Convertir les objets en tableaux [latitude, longitude]\r\n            const fromWaypoint = [customerCoordinates.latitude, customerCoordinates.longitude];\r\n            const toWaypoint = [entrepotCoordinates.latitude, entrepotCoordinates.longitude];\r\n\r\n            console.log(\"fromWayPoint : \" + fromWaypoint);\r\n            console.log(\"toWayPoint : \" + toWaypoint);\r\n\r\n            // Appeler l'API avec ces tableaux\r\n            const response = await getResultFromRoutingApi(fromWaypoint, toWaypoint);\r\n            const distance = response.features[0]?.properties.distance / 1000;\r\n            setDistance(distance);\r\n            setRouteData(response);\r\n        } catch (error) {\r\n            console.error(\"Erreur lors de l'appel à l'API de routage : \", error);\r\n        }\r\n    };\r\n\r\n\r\n    const calculQuantiteCo2 = async () => {\r\n        //TODO : ajouter table livraison pour pouvoir calculer emissions CO2 (calculer distace avec les attributs de la livraison aussi)\r\n        //const quantiteCO2 = distance * livraison.transport.kgCo2;\r\n    };\r\n\r\n\r\n    // Display\r\n    return (\r\n        <div className=\"container\">\r\n            <h2>Démo du processus de livraison</h2><br/>\r\n            <h4>Cas d'une livraison au domicile du client :</h4>\r\n            <br/>\r\n            <h5>Choix du client :</h5>\r\n            <div>\r\n                <label>Client ID : </label>\r\n                <input\r\n                    type=\"number\"\r\n                    value={customerId}\r\n                    onChange={(e) => setCustomerId(e.target.value)}\r\n                />\r\n            </div>\r\n            <br/>\r\n            <button onClick={fetchCustomerData}>Récupérer données du client</button>\r\n            <br/>\r\n\r\n            {customer && (\r\n                <>\r\n                    <div>\r\n                        <br/>\r\n                        <p><strong>Nom : </strong>{customer.firstname} {customer.lastname}</p>\r\n                        <p><strong>Adresse : </strong>{customer.address}</p>\r\n                    </div>\r\n                    <br/>\r\n                    <button onClick={fetchCustomerCoordinates}>\r\n                        Récupérer coordonnées client\r\n                    </button>\r\n                    {customerCoordinates.latitude && (\r\n                        <div>\r\n                            <p><strong>Latitude : </strong>{customerCoordinates.latitude}</p>\r\n                            <p><strong>Longitude : </strong>{customerCoordinates.longitude}</p>\r\n                        </div>\r\n                    )}\r\n                </>\r\n            )}\r\n\r\n            <br/>\r\n            <br/>\r\n\r\n            <h5>Choix de l'entrepot :</h5>\r\n            <div>\r\n                <label>Entrepot ID : </label>\r\n                <input\r\n                    type=\"number\"\r\n                    value={entrepotId}\r\n                    onChange={(e) => setEntrepotId(e.target.value)}\r\n                />\r\n            </div>\r\n            <br/>\r\n            <button onClick={fetchEntrepotData}>Récupérer données de l'entrepot</button>\r\n            {entrepot && (\r\n                <>\r\n                    <div>\r\n                        <br/>\r\n                        <p><strong>Adresse : </strong>{entrepot.address}</p>\r\n                    </div>\r\n                    <br/>\r\n                    <button onClick={fetchEntrepotCoordinates}>\r\n                        Récupérer coordonnées magasin\r\n                    </button>\r\n                    {entrepotCoordinates.latitude && (\r\n                        <div>\r\n                            <p><strong>Latitude : </strong>{entrepotCoordinates.latitude}</p>\r\n                            <p><strong>Longitude : </strong>{entrepotCoordinates.longitude}</p>\r\n                        </div>\r\n                    )}\r\n                </>\r\n            )}\r\n            {customerCoordinates && entrepotCoordinates && (\r\n                <>\r\n                    <button onClick={callRoutingApi}>\r\n                        Récupérer distance client - entrepot\r\n                    </button>\r\n                    {distance && (\r\n                        <>\r\n                            <div>\r\n                                <p><strong>Distance : </strong>{distance}<strong> km.</strong></p>\r\n                            </div>\r\n\r\n                        </>\r\n                    )}\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DemoLivraison;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}