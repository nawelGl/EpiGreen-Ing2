{"ast":null,"code":"var _jsxFileName = \"/Users/nawel/Documents/GitHub/EpiGreen-Ing2/proto-front/src/components/DemoLivraison.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { getResultFromRoutingApi, getResultFromGeocodingApi } from \"../api/Geoapify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DemoLivraison = () => {\n  _s();\n  const [distance, setDistance] = useState(null);\n  const [customerId, setCustomerId] = useState(\"\");\n  const [storeId, setStoreId] = useState(\"\");\n  const [customer, setCustomer] = useState({\n    lastname: '',\n    firstname: '',\n    birthdate: '',\n    address: ''\n  });\n\n  //Params écrits en dur à changer\n  const fromWaypoint = [38.937165, -77.04559];\n  const toWaypoint = [39.881152, -76.990693];\n  const address = \"17 avenue du 11 novembre 1918, 94400, Vitry-sur-Seine, France\";\n  const calculateDistance = async () => {\n    try {\n      const response = await axios.post('http://localhost:8080/api/calculate-distance', {\n        customerId: parseInt(customerId),\n        storeId: parseInt(storeId)\n      });\n      setDistance(response.data);\n    } catch (error) {\n      console.error(\"Erreur lors du calcul de la distance : \", error);\n    }\n  };\n\n  //créér un composant pour enregistrer les données de la fonction :\n  const callRoutingApi = async () => {};\n\n  //Affichage\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"D\\xE9mo Livraison\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 36\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Client ID : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: customerId,\n        onChange: e => setCustomerId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Magasin ID : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: storeId,\n        onChange: e => setStoreId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getResultFromRoutingApi(fromWaypoint, toWaypoint),\n      children: \"Tester API Routing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: getResultFromGeocodingApi(address),\n      children: \"Tester API Geocoding\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleInputChange(),\n      children: \"R\\xE9cup\\xE9rer data customer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(DemoLivraison, \"DouZbdD0m9lH5j9JYhVGB/tuK5k=\");\n_c = DemoLivraison;\nexport default DemoLivraison;\nvar _c;\n$RefreshReg$(_c, \"DemoLivraison\");","map":{"version":3,"names":["React","useState","getResultFromRoutingApi","getResultFromGeocodingApi","jsxDEV","_jsxDEV","DemoLivraison","_s","distance","setDistance","customerId","setCustomerId","storeId","setStoreId","customer","setCustomer","lastname","firstname","birthdate","address","fromWaypoint","toWaypoint","calculateDistance","response","axios","post","parseInt","data","error","console","callRoutingApi","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","handleInputChange","_c","$RefreshReg$"],"sources":["/Users/nawel/Documents/GitHub/EpiGreen-Ing2/proto-front/src/components/DemoLivraison.js"],"sourcesContent":["import React, { useState} from 'react';\r\nimport { getResultFromRoutingApi, getResultFromGeocodingApi } from \"../api/Geoapify\";\r\n\r\nconst DemoLivraison = () => {\r\n    const [distance, setDistance] = useState(null);\r\n    const [customerId, setCustomerId] = useState(\"\");\r\n    const [storeId, setStoreId] = useState(\"\");\r\n    const [customer, setCustomer] = useState({\r\n        lastname: '',\r\n        firstname: '',\r\n        birthdate: '',\r\n        address: ''\r\n    });\r\n\r\n    //Params écrits en dur à changer\r\n    const fromWaypoint = [38.937165, -77.04559];\r\n    const toWaypoint = [39.881152, -76.990693];\r\n\r\n    const address = \"17 avenue du 11 novembre 1918, 94400, Vitry-sur-Seine, France\";\r\n\r\n    const calculateDistance = async () => {\r\n        try {\r\n            const response = await axios.post('http://localhost:8080/api/calculate-distance', {\r\n                customerId: parseInt(customerId),\r\n                storeId: parseInt(storeId),\r\n            });\r\n            setDistance(response.data);\r\n        } catch (error) {\r\n            console.error(\"Erreur lors du calcul de la distance : \", error);\r\n        }\r\n    };\r\n\r\n    //créér un composant pour enregistrer les données de la fonction :\r\n    const callRoutingApi = async () => {\r\n\r\n    };\r\n\r\n    //Affichage\r\n    return (\r\n        <div className=\"container\">\r\n            <h2>Démo Livraison</h2><br/>\r\n            <div>\r\n                <label>Client ID : </label>\r\n                <input\r\n                    type=\"number\"\r\n                    value={customerId}\r\n                    onChange={(e) => setCustomerId(e.target.value)}\r\n                />\r\n            </div>\r\n            <br/>\r\n            <div>\r\n                <label>Magasin ID : </label>\r\n                <input\r\n                    type=\"number\"\r\n                    value={storeId}\r\n                    onChange={(e) => setStoreId(e.target.value)}\r\n                />\r\n            </div>\r\n            <br/>\r\n            {/*<button onClick={calculateDistance}>Calculer Distance</button>\r\n            {distance !== null && (\r\n                <div>\r\n                    <br/><p><strong>Distance calculée : {distance} km</strong></p>\r\n                </div>\r\n            )*/}\r\n            <button onClick={getResultFromRoutingApi(fromWaypoint, toWaypoint)}>Tester API Routing</button>\r\n            <br/>\r\n            <br/>\r\n            <button onClick={getResultFromGeocodingApi(address)}>Tester API Geocoding</button>\r\n            <br/>\r\n            <br/>\r\n            <button onClick={handleInputChange()}>Récupérer data customer</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DemoLivraison;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}