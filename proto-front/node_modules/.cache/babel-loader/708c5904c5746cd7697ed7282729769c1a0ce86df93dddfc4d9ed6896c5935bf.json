{"ast":null,"code":"var _jsxFileName = \"/Users/nawreshajabouda/Documents/GitHub/EpiGreen-Ing2/proto-front/src/components/DemoEcTransport.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { GET_PROCESS_ROUTES, GET_PROCESS_ROUTES_BY_ID, GET_PROCESS_ROUTES_BY_PRODUCT } from \"../constants/back\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DemoEcTransport() {\n  _s();\n  const [productId, setProductId] = useState(''); // ID du produit entré par l'utilisateur\n  const [processRoutes, setProcessRoutes] = useState([]); // Liste des trajets effectué durant le process du produit\n  const [error, setError] = useState(null);\n  const getProcessRoutes = async id => {\n    if (!id) {\n      alert(\"Veuillez entrer un ID produit valide.\");\n      return;\n    }\n    try {\n      const response = await axios.get(`${GET_PROCESS_ROUTES_BY_PRODUCT}${id}`);\n      setProcessRoutes(response.data);\n      setError(null);\n    } catch (error) {\n      console.error(\"Erreur lors de la récupération des trajets :\", error);\n      alert(\"Une erreur s'est produite lors de la récupération des trajets. Veuillez vérifier l'ID produit ou réessayer.\");\n      setProcessRoutes([]);\n    }\n  };\n  const setProcessRouteData = async () => {\n    console.log(\"Début du traitement\");\n    console.log(GET_PROCESS_ROUTES);\n    axios.get(GET_PROCESS_ROUTES).then(response => {\n      console.log(\"Réponse complète :\", response);\n      setProcessRoutes(response.data);\n      setError(null);\n    }).catch(error => {\n      console.error(error);\n      console.error(\"Erreur lors de la récupération des trajets  GET ALL :\", error);\n      if (error.response) {\n        console.error(\"Détails de l'erreur :\", error.response);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Demo EC Transport\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"productIdInput\",\n        children: \"Entrer l'ID produit :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"productIdInput\",\n        type: \"number\",\n        value: productId,\n        onChange: e => setProductId(e.target.value),\n        placeholder: \"ID Produit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getProcessRoutes,\n        children: \"Rechercher\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: setProcessRouteData,\n      children: \"Tout afficher\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 23\n    }, this), processRoutes.length > 0 ? /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-bordered table-hover\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID Route\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Type de Transport\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Ville de D\\xE9part\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Ville d'Arriv\\xE9e\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Empreinte Carbone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: processRoutes.map(route => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: route.idProcessRoutes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: route.typeTransportation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: route.cityDep\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: route.cityArr\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: route.carbonFootprint\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this)]\n        }, route.idProcessRoutes, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this) : !error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Aucune route trouv\\xE9e pour cet ID produit.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(DemoEcTransport, \"45lxRKLKn9ey3yHnVR4hhSVK+qw=\");\n_c = DemoEcTransport;\nvar _c;\n$RefreshReg$(_c, \"DemoEcTransport\");","map":{"version":3,"names":["React","useState","axios","GET_PROCESS_ROUTES","GET_PROCESS_ROUTES_BY_ID","GET_PROCESS_ROUTES_BY_PRODUCT","jsxDEV","_jsxDEV","DemoEcTransport","_s","productId","setProductId","processRoutes","setProcessRoutes","error","setError","getProcessRoutes","id","alert","response","get","data","console","setProcessRouteData","log","then","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","value","onChange","e","target","placeholder","onClick","style","color","length","map","route","idProcessRoutes","typeTransportation","cityDep","cityArr","carbonFootprint","_c","$RefreshReg$"],"sources":["/Users/nawreshajabouda/Documents/GitHub/EpiGreen-Ing2/proto-front/src/components/DemoEcTransport.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport {GET_PROCESS_ROUTES, GET_PROCESS_ROUTES_BY_ID, GET_PROCESS_ROUTES_BY_PRODUCT} from \"../constants/back\";\r\n\r\nexport default function DemoEcTransport() {\r\n    const [productId, setProductId] = useState(''); // ID du produit entré par l'utilisateur\r\n    const [processRoutes, setProcessRoutes] = useState([]); // Liste des trajets effectué durant le process du produit\r\n    const [error, setError] = useState(null);\r\n\r\n    const getProcessRoutes = async (id) => {\r\n        if (!id) {\r\n            alert(\"Veuillez entrer un ID produit valide.\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await axios.get(`${GET_PROCESS_ROUTES_BY_PRODUCT}${id}`);\r\n            setProcessRoutes(response.data);\r\n            setError(null);\r\n        } catch (error) {\r\n            console.error(\"Erreur lors de la récupération des trajets :\", error);\r\n            alert(\"Une erreur s'est produite lors de la récupération des trajets. Veuillez vérifier l'ID produit ou réessayer.\");\r\n            setProcessRoutes([]);\r\n        }\r\n    };\r\n\r\n\r\n    const setProcessRouteData = async () => {\r\n        console.log(\"Début du traitement\");\r\n        console.log(GET_PROCESS_ROUTES);\r\n\r\n        axios.get(GET_PROCESS_ROUTES)\r\n            .then(response => {\r\n                console.log(\"Réponse complète :\", response);\r\n                setProcessRoutes(response.data);\r\n                setError(null);\r\n            })\r\n            .catch(error => {\r\n                console.error(error)\r\n                console.error(\"Erreur lors de la récupération des trajets  GET ALL :\", error);\r\n                if (error.response) {\r\n                    console.error(\"Détails de l'erreur :\", error.response);\r\n                }\r\n            });\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2>Demo EC Transport</h2>\r\n            <div>\r\n                <label htmlFor=\"productIdInput\">Entrer l'ID produit :</label>\r\n                <input\r\n                    id=\"productIdInput\"\r\n                    type=\"number\"\r\n                    value={productId}\r\n                    onChange={(e) => setProductId(e.target.value)}\r\n                    placeholder=\"ID Produit\"\r\n                />\r\n                <button onClick={getProcessRoutes}>Rechercher</button>\r\n            </div>\r\n            <br />\r\n            <button onClick={setProcessRouteData}>Tout afficher</button>\r\n            <br />\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}\r\n            {processRoutes.length > 0 ? (\r\n                <table className=\"table table-bordered table-hover\">\r\n                    <thead>\r\n                    <tr>\r\n                        <th>ID Route</th>\r\n                        <th>Type de Transport</th>\r\n                        <th>Ville de Départ</th>\r\n                        <th>Ville d'Arrivée</th>\r\n                        <th>Empreinte Carbone</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {processRoutes.map((route) => (\r\n                        <tr key={route.idProcessRoutes}>\r\n                            <td>{route.idProcessRoutes}</td>\r\n                            <td>{route.typeTransportation}</td>\r\n                            <td>{route.cityDep}</td>\r\n                            <td>{route.cityArr}</td>\r\n                            <td>{route.carbonFootprint}</td>\r\n                        </tr>\r\n                    ))}\r\n                    </tbody>\r\n                </table>\r\n            ) : (\r\n                !error && <p>Aucune route trouvée pour cet ID produit.</p>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}