{"ast":null,"code":"var _jsxFileName = \"/Users/nawel/Documents/GitHub/EpiGreen-Ing2/proto-front/src/components/DemoLivraison.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { getResultFromRoutingApi, getResultFromGeocodingApi } from \"../api/Geoapify\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DemoLivraison = () => {\n  _s();\n  const [distance, setDistance] = useState(null);\n  const [customerId, setCustomerId] = useState(\"\");\n  const [storeId, setStoreId] = useState(\"\");\n  const [routeData, setRouteData] = useState(null);\n  const [geocodeData, setGeocodeData] = useState(null);\n  const [customerCoordinates, setCustomerCoordinates] = useState(null);\n  const [storeCoordinates, setStoreCoordinates] = useState(null);\n\n  //Params écrits en dur à changer\n  const fromWaypoint = [38.937165, -77.04559];\n  const toWaypoint = [39.881152, -76.990693];\n  const address = \"17 avenue du 11 novembre 1918, 94400, Vitry-sur-Seine, France\";\n\n  // Function to call the routage API\n  const callRoutingApi = async () => {\n    try {\n      var _response$features$;\n      const response = await getResultFromRoutingApi(fromWaypoint, toWaypoint);\n      const distance = ((_response$features$ = response.features[0]) === null || _response$features$ === void 0 ? void 0 : _response$features$.properties.distance) / 1000;\n      setDistance(distance);\n      setRouteData(response);\n    } catch (error) {\n      console.error(\"Erreur lors de l'appel à l'API de routage : \", error);\n    }\n  };\n\n  // Function to call the geocoding API\n  const callGeocodingApi = async () => {\n    try {\n      var _response$features$2, _response$features$3;\n      const response = await getResultFromGeocodingApi(address);\n      const lat = (_response$features$2 = response.features[0]) === null || _response$features$2 === void 0 ? void 0 : _response$features$2.properties.lat;\n      const lon = (_response$features$3 = response.features[0]) === null || _response$features$3 === void 0 ? void 0 : _response$features$3.properties.lon;\n      setGeocodeData({\n        lat,\n        lon\n      });\n    } catch (error) {\n      console.error(\"Erreur lors de l'appel à l'API de géocodage : \", error);\n    }\n  };\n\n  // Display\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"D\\xE9mo Livraison\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 36\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Client ID : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: customerId,\n        onChange: e => setCustomerId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Magasin ID : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: storeId,\n        onChange: e => setStoreId(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: callGeocodingApi,\n      children: \"Tester API Geocoding\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), geocodeData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Latitude : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 24\n        }, this), geocodeData.lat]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Longitude : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 24\n        }, this), geocodeData.lon]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: callRoutingApi,\n      children: \"Tester API Routing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), distance !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"Distance calcul\\xE9e : \", distance, \" km\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 24\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(DemoLivraison, \"EMlxDNvhnWuNmsWnBrk9VPfyWy4=\");\n_c = DemoLivraison;\nexport default DemoLivraison;\nvar _c;\n$RefreshReg$(_c, \"DemoLivraison\");","map":{"version":3,"names":["React","useState","getResultFromRoutingApi","getResultFromGeocodingApi","jsxDEV","_jsxDEV","DemoLivraison","_s","distance","setDistance","customerId","setCustomerId","storeId","setStoreId","routeData","setRouteData","geocodeData","setGeocodeData","customerCoordinates","setCustomerCoordinates","storeCoordinates","setStoreCoordinates","fromWaypoint","toWaypoint","address","callRoutingApi","_response$features$","response","features","properties","error","console","callGeocodingApi","_response$features$2","_response$features$3","lat","lon","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/nawel/Documents/GitHub/EpiGreen-Ing2/proto-front/src/components/DemoLivraison.js"],"sourcesContent":["import React, { useState} from 'react';\r\nimport { getResultFromRoutingApi, getResultFromGeocodingApi } from \"../api/Geoapify\";\r\n\r\nconst DemoLivraison = () => {\r\n    const [distance, setDistance] = useState(null);\r\n    const [customerId, setCustomerId] = useState(\"\");\r\n    const [storeId, setStoreId] = useState(\"\");\r\n    const [routeData, setRouteData] = useState(null);\r\n    const [geocodeData, setGeocodeData] = useState(null);\r\n    const [customerCoordinates, setCustomerCoordinates] = useState(null);\r\n    const [storeCoordinates, setStoreCoordinates] = useState(null);\r\n\r\n    //Params écrits en dur à changer\r\n    const fromWaypoint = [38.937165, -77.04559];\r\n    const toWaypoint = [39.881152, -76.990693];\r\n\r\n    const address = \"17 avenue du 11 novembre 1918, 94400, Vitry-sur-Seine, France\";\r\n\r\n    // Function to call the routage API\r\n    const callRoutingApi = async () => {\r\n        try {\r\n            const response = await getResultFromRoutingApi(fromWaypoint, toWaypoint);\r\n            const distance = response.features[0]?.properties.distance / 1000;\r\n            setDistance(distance);\r\n            setRouteData(response);\r\n        } catch (error) {\r\n            console.error(\"Erreur lors de l'appel à l'API de routage : \", error);\r\n        }\r\n    };\r\n\r\n    // Function to call the geocoding API\r\n    const callGeocodingApi = async () => {\r\n        try {\r\n            const response = await getResultFromGeocodingApi(address);\r\n            const lat = response.features[0]?.properties.lat;\r\n            const lon = response.features[0]?.properties.lon;\r\n            setGeocodeData({ lat, lon });\r\n        } catch (error) {\r\n            console.error(\"Erreur lors de l'appel à l'API de géocodage : \", error);\r\n        }\r\n    };\r\n\r\n\r\n    // Display\r\n    return (\r\n        <div className=\"container\">\r\n            <h2>Démo Livraison</h2><br />\r\n            <div>\r\n                <label>Client ID : </label>\r\n                <input\r\n                    type=\"number\"\r\n                    value={customerId}\r\n                    onChange={(e) => setCustomerId(e.target.value)}\r\n                />\r\n            </div>\r\n            <br />\r\n            <div>\r\n                <label>Magasin ID : </label>\r\n                <input\r\n                    type=\"number\"\r\n                    value={storeId}\r\n                    onChange={(e) => setStoreId(e.target.value)}\r\n                />\r\n            </div>\r\n            <br />\r\n            <button onClick={callGeocodingApi}>Tester API Geocoding</button>\r\n            {geocodeData && (\r\n                <div>\r\n                    <p><strong>Latitude : </strong>{geocodeData.lat}</p>\r\n                    <p><strong>Longitude : </strong>{geocodeData.lon}</p>\r\n                </div>\r\n            )}\r\n            <br />\r\n            <button onClick={callRoutingApi}>Tester API Routing</button>\r\n            {distance !== null && (\r\n                <div>\r\n                    <p><strong>Distance calculée : {distance} km</strong></p>\r\n                </div>\r\n            )}\r\n            <br />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DemoLivraison;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}