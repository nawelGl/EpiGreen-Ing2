{"ast":null,"code":"import axios from \"axios\";\n\n// Appel API OK\n/*export const getResultFromRoutingApi = async () => {\r\n    const myAPIKey = \"c81205a4fb97473b93dd0df61a9838c6\";\r\n    const fromWaypoint = [38.937165, -77.04559];\r\n    const toWaypoint = [39.881152, -76.990693];\r\n    const url = `https://api.geoapify.com/v1/routing?waypoints=${fromWaypoint.join(\",\")}|${toWaypoint.join(\",\")}&mode=drive&details=instruction_details&apiKey=${myAPIKey}`;\r\n    const data = \"Bonjour depuis Page1!\";\r\n\r\n    console.log(\"@@@ Dans getResultFromRoutingApi !\");\r\n\r\n    const response = await axios.get(url);\r\n    console.log(response.data);\r\n    return response.data;\r\n};*/\n\nexport const getResultFromRoutingApi = async (fromWaypoint, toWaypoint) => {\n  const myAPIKey = \"c81205a4fb97473b93dd0df61a9838c6\";\n  const url = `https://api.geoapify.com/v1/routing?waypoints=${fromWaypoint.join(\",\")}|${toWaypoint.join(\",\")}&mode=drive&details=instruction_details&apiKey=${myAPIKey}`;\n  const data = \"Bonjour depuis Page1!\";\n  console.log(\"@@@ Dans getResultFromRoutingApi !\");\n  const response = await axios.get(url);\n  console.log(response.data);\n  return response.data;\n};\n\n//Appel API OK\n/*export const getResultFromGeocodingApi = async () => {\r\n    const myAPIKey = \"c81205a4fb97473b93dd0df61a9838c6\";\r\n    const address = \"17 avenue du 11 novembre 1918, 94400, Vitry-sur-Seine, France\";\r\n    const encodedAddress = encodeURIComponent(address);\r\n    const url = `https://api.geoapify.com/v1/geocode/search?text=${encodedAddress}&apiKey=${myAPIKey}`;\r\n\r\n    console.log(\"### Dans getResultFromGeocodingApi !\");\r\n\r\n    const response = await axios.get(url);\r\n    console.log(response.data);\r\n    return response.data;\r\n};*/\n\nexport const getResultFromGeocodingApi = async address => {\n  const myAPIKey = \"c81205a4fb97473b93dd0df61a9838c6\";\n  const encodedAddress = encodeURIComponent(address);\n  const url = `https://api.geoapify.com/v1/geocode/search?text=${encodedAddress}&apiKey=${myAPIKey}`;\n  console.log(\"### Dans getResultFromGeocodingApi !\");\n  const response = await axios.get(url);\n  console.log(response.data);\n  return response.data;\n};\nconst Geoapify = () => {};\n_c = Geoapify;\nexport default Geoapify;\nvar _c;\n$RefreshReg$(_c, \"Geoapify\");","map":{"version":3,"names":["axios","getResultFromRoutingApi","fromWaypoint","toWaypoint","myAPIKey","url","join","data","console","log","response","get","getResultFromGeocodingApi","address","encodedAddress","encodeURIComponent","Geoapify","_c","$RefreshReg$"],"sources":["/Users/nawreshajabouda/Documents/GitHub/EpiGreen-Ing2/proto-front/src/api/Geoapify.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// Appel API OK\r\n/*export const getResultFromRoutingApi = async () => {\r\n    const myAPIKey = \"c81205a4fb97473b93dd0df61a9838c6\";\r\n    const fromWaypoint = [38.937165, -77.04559];\r\n    const toWaypoint = [39.881152, -76.990693];\r\n    const url = `https://api.geoapify.com/v1/routing?waypoints=${fromWaypoint.join(\",\")}|${toWaypoint.join(\",\")}&mode=drive&details=instruction_details&apiKey=${myAPIKey}`;\r\n    const data = \"Bonjour depuis Page1!\";\r\n\r\n    console.log(\"@@@ Dans getResultFromRoutingApi !\");\r\n\r\n    const response = await axios.get(url);\r\n    console.log(response.data);\r\n    return response.data;\r\n};*/\r\n\r\nexport const getResultFromRoutingApi = async (fromWaypoint, toWaypoint) => {\r\n    const myAPIKey = \"c81205a4fb97473b93dd0df61a9838c6\";\r\n    const url = `https://api.geoapify.com/v1/routing?waypoints=${fromWaypoint.join(\",\")}|${toWaypoint.join(\",\")}&mode=drive&details=instruction_details&apiKey=${myAPIKey}`;\r\n    const data = \"Bonjour depuis Page1!\";\r\n\r\n    console.log(\"@@@ Dans getResultFromRoutingApi !\");\r\n\r\n    const response = await axios.get(url);\r\n    console.log(response.data);\r\n    return response.data;\r\n};\r\n\r\n//Appel API OK\r\n/*export const getResultFromGeocodingApi = async () => {\r\n    const myAPIKey = \"c81205a4fb97473b93dd0df61a9838c6\";\r\n    const address = \"17 avenue du 11 novembre 1918, 94400, Vitry-sur-Seine, France\";\r\n    const encodedAddress = encodeURIComponent(address);\r\n    const url = `https://api.geoapify.com/v1/geocode/search?text=${encodedAddress}&apiKey=${myAPIKey}`;\r\n\r\n    console.log(\"### Dans getResultFromGeocodingApi !\");\r\n\r\n    const response = await axios.get(url);\r\n    console.log(response.data);\r\n    return response.data;\r\n};*/\r\n\r\nexport const getResultFromGeocodingApi = async (address) => {\r\n    const myAPIKey = \"c81205a4fb97473b93dd0df61a9838c6\";\r\n    const encodedAddress = encodeURIComponent(address);\r\n    const url = `https://api.geoapify.com/v1/geocode/search?text=${encodedAddress}&apiKey=${myAPIKey}`;\r\n\r\n    console.log(\"### Dans getResultFromGeocodingApi !\");\r\n\r\n    const response = await axios.get(url);\r\n    console.log(response.data);\r\n    return response.data;\r\n};\r\n\r\n\r\n    const Geoapify = () => {\r\n\r\n    };\r\n\r\nexport default Geoapify;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,uBAAuB,GAAG,MAAAA,CAAOC,YAAY,EAAEC,UAAU,KAAK;EACvE,MAAMC,QAAQ,GAAG,kCAAkC;EACnD,MAAMC,GAAG,GAAI,iDAAgDH,YAAY,CAACI,IAAI,CAAC,GAAG,CAAE,IAAGH,UAAU,CAACG,IAAI,CAAC,GAAG,CAAE,kDAAiDF,QAAS,EAAC;EACvK,MAAMG,IAAI,GAAG,uBAAuB;EAEpCC,OAAO,CAACC,GAAG,CAAC,oCAAoC,CAAC;EAEjD,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAACN,GAAG,CAAC;EACrCG,OAAO,CAACC,GAAG,CAACC,QAAQ,CAACH,IAAI,CAAC;EAC1B,OAAOG,QAAQ,CAACH,IAAI;AACxB,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMK,yBAAyB,GAAG,MAAOC,OAAO,IAAK;EACxD,MAAMT,QAAQ,GAAG,kCAAkC;EACnD,MAAMU,cAAc,GAAGC,kBAAkB,CAACF,OAAO,CAAC;EAClD,MAAMR,GAAG,GAAI,mDAAkDS,cAAe,WAAUV,QAAS,EAAC;EAElGI,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;EAEnD,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAACN,GAAG,CAAC;EACrCG,OAAO,CAACC,GAAG,CAACC,QAAQ,CAACH,IAAI,CAAC;EAC1B,OAAOG,QAAQ,CAACH,IAAI;AACxB,CAAC;AAGG,MAAMS,QAAQ,GAAGA,CAAA,KAAM,CAEvB,CAAC;AAACC,EAAA,GAFID,QAAQ;AAIlB,eAAeA,QAAQ;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}