{"ast":null,"code":"var _jsxFileName = \"/Users/sophia/Documents/GitHub/EpiGreen-Ing2/proto-front/src/components/Search.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Search() {\n  _s();\n  const [searchTerm, setSearchTerm] = useState(''); // pour stocker les mots-clés\n  const [loading, setLoading] = useState(false); // Indicateur de chargement\n  const handleSearch = async () => {\n    // Logique pour appeler le backend avec les mots-clés\n    console.log(\"Mots-clés recherchés : \", searchTerm);\n    setLoading(true);\n    try {\n      // Appel au backend avec les mots-clés\n      const response = await fetch('/api/search', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          keywords: searchTerm // Envoi des mots-clés au backend\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error(`Erreur : ${response.statusText}`);\n      }\n      const data = await response.json();\n      setResults(data); // Stocke les résultats retournés par le backend\n    } catch (error) {\n      console.error(\"Erreur lors de la recherche :\", error);\n      alert(\"Une erreur est survenue lors de la recherche.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      handleSearch();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Recherche\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Que cherchez vous?\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value),\n        onKeyDown: handleKeyPress // Détection de la touche \"Enter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"Enter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(Search, \"+YOC9dtP1/3HuQyxjzkLvsDEAcQ=\");\n_c = Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Search","_s","searchTerm","setSearchTerm","loading","setLoading","handleSearch","console","log","response","fetch","method","headers","body","JSON","stringify","keywords","ok","Error","statusText","data","json","setResults","error","alert","handleKeyPress","e","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","onKeyDown","onClick","_c","$RefreshReg$"],"sources":["/Users/sophia/Documents/GitHub/EpiGreen-Ing2/proto-front/src/components/Search.js"],"sourcesContent":["import React, { useState } from 'react';\n\n\n\nexport default function Search() {\n    const [searchTerm, setSearchTerm] = useState(''); // pour stocker les mots-clés\n    const [loading, setLoading] = useState(false); // Indicateur de chargement\n    const handleSearch = async () => {\n        // Logique pour appeler le backend avec les mots-clés\n        console.log(\"Mots-clés recherchés : \", searchTerm);\n        setLoading(true);\n\n        try {\n            // Appel au backend avec les mots-clés\n            const response = await fetch('/api/search', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    keywords: searchTerm, // Envoi des mots-clés au backend\n                }),\n            });\n\n            if (!response.ok) {\n                throw new Error(`Erreur : ${response.statusText}`);\n            }\n\n            const data = await response.json();\n            setResults(data); // Stocke les résultats retournés par le backend\n        } catch (error) {\n            console.error(\"Erreur lors de la recherche :\", error);\n            alert(\"Une erreur est survenue lors de la recherche.\");\n        } finally {\n            setLoading(false);\n        }\n    };\n\n\n    const handleKeyPress = (e) => {\n        if (e.key === 'Enter') {\n            handleSearch();\n        }\n    };\n\n    return (\n        <div className=\"container text-center\">\n            <h1>Recherche</h1>\n            <div className=\"search-bar\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Que cherchez vous?\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                    onKeyDown={handleKeyPress} // Détection de la touche \"Enter\"\n                />\n                <button onClick={handleSearch}>Enter</button>\n            </div>\n        </div>\n    );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIxC,eAAe,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAClD,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC/C,MAAMS,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B;IACAC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEN,UAAU,CAAC;IAClDG,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACA;MACA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAa,EAAE;QACxCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBC,QAAQ,EAAEd,UAAU,CAAE;QAC1B,CAAC;MACL,CAAC,CAAC;;MAEF,IAAI,CAACO,QAAQ,CAACQ,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAE,YAAWT,QAAQ,CAACU,UAAW,EAAC,CAAC;MACtD;MAEA,MAAMC,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;MAClCC,UAAU,CAACF,IAAI,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZhB,OAAO,CAACgB,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrDC,KAAK,CAAC,+CAA+C,CAAC;IAC1D,CAAC,SAAS;MACNnB,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAGD,MAAMoB,cAAc,GAAIC,CAAC,IAAK;IAC1B,IAAIA,CAAC,CAACC,GAAG,KAAK,OAAO,EAAE;MACnBrB,YAAY,CAAC,CAAC;IAClB;EACJ,CAAC;EAED,oBACIP,OAAA;IAAK6B,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBAClC9B,OAAA;MAAA8B,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBlC,OAAA;MAAK6B,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACvB9B,OAAA;QACImC,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,oBAAoB;QAChCC,KAAK,EAAElC,UAAW;QAClBmC,QAAQ,EAAGX,CAAC,IAAKvB,aAAa,CAACuB,CAAC,CAACY,MAAM,CAACF,KAAK,CAAE;QAC/CG,SAAS,EAAEd,cAAe,CAAC;MAAA;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B,CAAC,eACFlC,OAAA;QAAQyC,OAAO,EAAElC,YAAa;QAAAuB,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAChC,EAAA,CAxDuBD,MAAM;AAAAyC,EAAA,GAANzC,MAAM;AAAA,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}