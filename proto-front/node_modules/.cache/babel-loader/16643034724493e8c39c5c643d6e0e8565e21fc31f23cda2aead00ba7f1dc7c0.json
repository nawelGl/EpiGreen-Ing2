{"ast":null,"code":"var _jsxFileName = \"/Users/nawel/Documents/GitHub/EpiGreen-Ing2/proto-front/src/components/Logs.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Logs = () => {\n  _s();\n  const [data, setData] = useState(null); // État pour stocker les données reçues\n  const [error, setError] = useState(null); // État pour stocker les erreurs\n\n  // Appeler l'API une fois au montage du composant\n  useEffect(() => {\n    fetch('/api/info').then(response => {\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return response.json();\n    }).then(data => {\n      setData(data.message); // Stocker les données dans l'état\n    }).catch(err => {\n      setError(err.message); // Stocker les erreurs\n    });\n  }, []); // Le tableau vide [] signifie \"exécuter une fois au montage\"\n\n  // Affichage conditionnel en fonction de l'état\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Erreur : \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"output\",\n    children: data ? data : \"Chargement des données...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(Logs, \"XDVXnHzsKW9JpOo48THjIq2+NOI=\");\n_c = Logs;\nexport default Logs;\nvar _c;\n$RefreshReg$(_c, \"Logs\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Logs","_s","data","setData","error","setError","fetch","then","response","ok","Error","status","json","message","catch","err","children","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/Users/nawel/Documents/GitHub/EpiGreen-Ing2/proto-front/src/components/Logs.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Logs = () => {\n    const [data, setData] = useState(null); // État pour stocker les données reçues\n    const [error, setError] = useState(null); // État pour stocker les erreurs\n\n    // Appeler l'API une fois au montage du composant\n    useEffect(() => {\n        fetch('/api/info')\n            .then((response) => {\n                if (!response.ok) {\n                    throw new Error(`HTTP error! status: ${response.status}`);\n                }\n                return response.json();\n            })\n            .then((data) => {\n                setData(data.message); // Stocker les données dans l'état\n            })\n            .catch((err) => {\n                setError(err.message); // Stocker les erreurs\n            });\n    }, []); // Le tableau vide [] signifie \"exécuter une fois au montage\"\n\n    // Affichage conditionnel en fonction de l'état\n    if (error) {\n        return <div>Erreur : {error}</div>;\n    }\n\n    return (\n        <div id=\"output\">\n            {data ? data : \"Chargement des données...\"}\n        </div>\n    );\n};\n\nexport default Logs;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACxC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE1C;EACAC,SAAS,CAAC,MAAM;IACZU,KAAK,CAAC,WAAW,CAAC,CACbC,IAAI,CAAEC,QAAQ,IAAK;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAE,uBAAsBF,QAAQ,CAACG,MAAO,EAAC,CAAC;MAC7D;MACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDL,IAAI,CAAEL,IAAI,IAAK;MACZC,OAAO,CAACD,IAAI,CAACW,OAAO,CAAC,CAAC,CAAC;IAC3B,CAAC,CAAC,CACDC,KAAK,CAAEC,GAAG,IAAK;MACZV,QAAQ,CAACU,GAAG,CAACF,OAAO,CAAC,CAAC,CAAC;IAC3B,CAAC,CAAC;EACV,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACA,IAAIT,KAAK,EAAE;IACP,oBAAOL,OAAA;MAAAiB,QAAA,GAAK,WAAS,EAACZ,KAAK;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EACtC;EAEA,oBACIrB,OAAA;IAAKsB,EAAE,EAAC,QAAQ;IAAAL,QAAA,EACXd,IAAI,GAAGA,IAAI,GAAG;EAA2B;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEd,CAAC;AAACnB,EAAA,CA/BID,IAAI;AAAAsB,EAAA,GAAJtB,IAAI;AAiCV,eAAeA,IAAI;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}